# Simple GCP Project with Debian VM
# This configuration creates:
# - A new GCP project
# - Enables Compute Engine API
# - Creates a single Debian VM

project {
  id: "my-custoodian-project"
  name: "Custoodian Debian VM Project"
  billing_account: "01EFB4-27DC88-8C3A31"  # Replace with your actual billing account ID
  apis: [
    GCP_API_COMPUTE
  ]
  labels {
    key: "environment"
    value: "demo"
  }
  labels {
    key: "purpose"
    value: "simple-vm"
  }
}

networking {
  # Default VPC network
  vpcs {
    name: "default-vpc"
    description: "Default VPC for simple VM"
    auto_create_subnetworks: true
    routing_mode: "REGIONAL"
  }

  # Firewall rule to allow SSH
  firewall_rules {
    name: "allow-ssh"
    description: "Allow SSH access to VMs"
    direction: "INGRESS"
    priority: 1000
    network: "default-vpc"
    source_ranges: ["0.0.0.0/0"]  # WARNING: This allows SSH from anywhere - restrict as needed
    target_tags: ["ssh-allowed"]
    
    allow {
      protocol: "tcp"
      ports: ["22"]
    }
  }
}

compute {
  # Single Debian VM instance
  instances {
    name: "debian-vm"
    machine_type: MACHINE_TYPE_E2_MEDIUM
    zone: ZONE_US_CENTRAL1_A
    image: "projects/debian-cloud/global/images/family/debian-12"
    
    network_interfaces {
      network: "default-vpc"
      
      # External IP for SSH access
      access_configs {
        type: "ONE_TO_ONE_NAT"
        network_tier: NETWORK_TIER_STANDARD
      }
    }
    
    # Add SSH tag for firewall rule
    tags: ["ssh-allowed"]
    
    # Optional metadata
    metadata {
      key: "startup-script"
      value: "#!/bin/bash\napt-get update\napt-get install -y htop curl\necho 'Debian VM is ready!' > /tmp/setup-complete.txt"
    }
    
    # Labels for organization
    metadata {
      key: "environment"
      value: "demo"
    }
  }
}
