// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/custodian/config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Root configuration message
type Config struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project configuration
	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Networking configuration
	Networking *Networking `protobuf:"bytes,2,opt,name=networking,proto3" json:"networking,omitempty"`
	// Compute configuration
	Compute *Compute `protobuf:"bytes,3,opt,name=compute,proto3" json:"compute,omitempty"`
	// Load balancer configuration
	LoadBalancers []*LoadBalancer `protobuf:"bytes,4,rep,name=load_balancers,json=loadBalancers,proto3" json:"load_balancers,omitempty"`
	// IAM configuration
	Iam *Iam `protobuf:"bytes,5,opt,name=iam,proto3" json:"iam,omitempty"`
	// Storage configuration
	Storage       *Storage `protobuf:"bytes,6,opt,name=storage,proto3" json:"storage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_proto_custodian_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *Config) GetNetworking() *Networking {
	if x != nil {
		return x.Networking
	}
	return nil
}

func (x *Config) GetCompute() *Compute {
	if x != nil {
		return x.Compute
	}
	return nil
}

func (x *Config) GetLoadBalancers() []*LoadBalancer {
	if x != nil {
		return x.LoadBalancers
	}
	return nil
}

func (x *Config) GetIam() *Iam {
	if x != nil {
		return x.Iam
	}
	return nil
}

func (x *Config) GetStorage() *Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

// Project represents a GCP project configuration
type Project struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project ID (must be globally unique)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Human-readable project name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Billing account ID
	BillingAccount string `protobuf:"bytes,3,opt,name=billing_account,json=billingAccount,proto3" json:"billing_account,omitempty"`
	// Organization ID (optional)
	OrganizationId string `protobuf:"bytes,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// Folder ID (optional, mutually exclusive with organization_id)
	FolderId string `protobuf:"bytes,5,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// APIs to enable
	Apis []GcpApi `protobuf:"varint,6,rep,packed,name=apis,proto3,enum=custodian.GcpApi" json:"apis,omitempty"`
	// Labels for the project
	Labels        map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Project) Reset() {
	*x = Project{}
	mi := &file_proto_custodian_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{1}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetBillingAccount() string {
	if x != nil {
		return x.BillingAccount
	}
	return ""
}

func (x *Project) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *Project) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *Project) GetApis() []GcpApi {
	if x != nil {
		return x.Apis
	}
	return nil
}

func (x *Project) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// Networking configuration
type Networking struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Reserved IP addresses
	ReservedIps []*ReservedIp `protobuf:"bytes,1,rep,name=reserved_ips,json=reservedIps,proto3" json:"reserved_ips,omitempty"`
	// VPC networks
	Vpcs []*Vpc `protobuf:"bytes,2,rep,name=vpcs,proto3" json:"vpcs,omitempty"`
	// Firewall rules
	FirewallRules []*FirewallRule `protobuf:"bytes,3,rep,name=firewall_rules,json=firewallRules,proto3" json:"firewall_rules,omitempty"`
	// NAT gateways
	NatGateways   []*NatGateway `protobuf:"bytes,4,rep,name=nat_gateways,json=natGateways,proto3" json:"nat_gateways,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Networking) Reset() {
	*x = Networking{}
	mi := &file_proto_custodian_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Networking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Networking) ProtoMessage() {}

func (x *Networking) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Networking.ProtoReflect.Descriptor instead.
func (*Networking) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{2}
}

func (x *Networking) GetReservedIps() []*ReservedIp {
	if x != nil {
		return x.ReservedIps
	}
	return nil
}

func (x *Networking) GetVpcs() []*Vpc {
	if x != nil {
		return x.Vpcs
	}
	return nil
}

func (x *Networking) GetFirewallRules() []*FirewallRule {
	if x != nil {
		return x.FirewallRules
	}
	return nil
}

func (x *Networking) GetNatGateways() []*NatGateway {
	if x != nil {
		return x.NatGateways
	}
	return nil
}

// Reserved IP address configuration
type ReservedIp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the reserved IP
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type of reserved IP (global or regional)
	Type ReservedIpType `protobuf:"varint,2,opt,name=type,proto3,enum=custodian.ReservedIpType" json:"type,omitempty"`
	// Region (required for regional IPs)
	Region Region `protobuf:"varint,3,opt,name=region,proto3,enum=custodian.Region" json:"region,omitempty"`
	// Network tier
	NetworkTier NetworkTier `protobuf:"varint,4,opt,name=network_tier,json=networkTier,proto3,enum=custodian.NetworkTier" json:"network_tier,omitempty"`
	// Description
	Description   string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReservedIp) Reset() {
	*x = ReservedIp{}
	mi := &file_proto_custodian_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReservedIp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservedIp) ProtoMessage() {}

func (x *ReservedIp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservedIp.ProtoReflect.Descriptor instead.
func (*ReservedIp) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{3}
}

func (x *ReservedIp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReservedIp) GetType() ReservedIpType {
	if x != nil {
		return x.Type
	}
	return ReservedIpType_RESERVED_IP_UNSPECIFIED
}

func (x *ReservedIp) GetRegion() Region {
	if x != nil {
		return x.Region
	}
	return Region_REGION_UNSPECIFIED
}

func (x *ReservedIp) GetNetworkTier() NetworkTier {
	if x != nil {
		return x.NetworkTier
	}
	return NetworkTier_NETWORK_TIER_UNSPECIFIED
}

func (x *ReservedIp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// VPC network configuration
type Vpc struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the VPC
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Subnets
	Subnets []*Subnet `protobuf:"bytes,3,rep,name=subnets,proto3" json:"subnets,omitempty"`
	// Auto create subnetworks
	AutoCreateSubnetworks bool `protobuf:"varint,4,opt,name=auto_create_subnetworks,json=autoCreateSubnetworks,proto3" json:"auto_create_subnetworks,omitempty"`
	// Routing mode
	RoutingMode   string `protobuf:"bytes,5,opt,name=routing_mode,json=routingMode,proto3" json:"routing_mode,omitempty"` // "GLOBAL" or "REGIONAL"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vpc) Reset() {
	*x = Vpc{}
	mi := &file_proto_custodian_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vpc) ProtoMessage() {}

func (x *Vpc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vpc.ProtoReflect.Descriptor instead.
func (*Vpc) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{4}
}

func (x *Vpc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vpc) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Vpc) GetSubnets() []*Subnet {
	if x != nil {
		return x.Subnets
	}
	return nil
}

func (x *Vpc) GetAutoCreateSubnetworks() bool {
	if x != nil {
		return x.AutoCreateSubnetworks
	}
	return false
}

func (x *Vpc) GetRoutingMode() string {
	if x != nil {
		return x.RoutingMode
	}
	return ""
}

// Subnet configuration
type Subnet struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the subnet
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// CIDR range
	Cidr string `protobuf:"bytes,2,opt,name=cidr,proto3" json:"cidr,omitempty"`
	// Region
	Region Region `protobuf:"varint,3,opt,name=region,proto3,enum=custodian.Region" json:"region,omitempty"`
	// Description
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Enable private Google access
	PrivateIpGoogleAccess bool `protobuf:"varint,5,opt,name=private_ip_google_access,json=privateIpGoogleAccess,proto3" json:"private_ip_google_access,omitempty"`
	// Secondary IP ranges
	SecondaryRanges []*SecondaryRange `protobuf:"bytes,6,rep,name=secondary_ranges,json=secondaryRanges,proto3" json:"secondary_ranges,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Subnet) Reset() {
	*x = Subnet{}
	mi := &file_proto_custodian_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subnet) ProtoMessage() {}

func (x *Subnet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subnet.ProtoReflect.Descriptor instead.
func (*Subnet) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{5}
}

func (x *Subnet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Subnet) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *Subnet) GetRegion() Region {
	if x != nil {
		return x.Region
	}
	return Region_REGION_UNSPECIFIED
}

func (x *Subnet) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Subnet) GetPrivateIpGoogleAccess() bool {
	if x != nil {
		return x.PrivateIpGoogleAccess
	}
	return false
}

func (x *Subnet) GetSecondaryRanges() []*SecondaryRange {
	if x != nil {
		return x.SecondaryRanges
	}
	return nil
}

// Secondary IP range for subnets
type SecondaryRange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Range name
	RangeName string `protobuf:"bytes,1,opt,name=range_name,json=rangeName,proto3" json:"range_name,omitempty"`
	// IP CIDR range
	IpCidrRange   string `protobuf:"bytes,2,opt,name=ip_cidr_range,json=ipCidrRange,proto3" json:"ip_cidr_range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecondaryRange) Reset() {
	*x = SecondaryRange{}
	mi := &file_proto_custodian_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecondaryRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecondaryRange) ProtoMessage() {}

func (x *SecondaryRange) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecondaryRange.ProtoReflect.Descriptor instead.
func (*SecondaryRange) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{6}
}

func (x *SecondaryRange) GetRangeName() string {
	if x != nil {
		return x.RangeName
	}
	return ""
}

func (x *SecondaryRange) GetIpCidrRange() string {
	if x != nil {
		return x.IpCidrRange
	}
	return ""
}

// Firewall rule configuration
type FirewallRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the firewall rule
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Direction (INGRESS or EGRESS)
	Direction string `protobuf:"bytes,3,opt,name=direction,proto3" json:"direction,omitempty"`
	// Priority (0-65534)
	Priority int32 `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	// Network
	Network string `protobuf:"bytes,5,opt,name=network,proto3" json:"network,omitempty"`
	// Source ranges (for INGRESS)
	SourceRanges []string `protobuf:"bytes,6,rep,name=source_ranges,json=sourceRanges,proto3" json:"source_ranges,omitempty"`
	// Destination ranges (for EGRESS)
	DestinationRanges []string `protobuf:"bytes,7,rep,name=destination_ranges,json=destinationRanges,proto3" json:"destination_ranges,omitempty"`
	// Source tags (for INGRESS)
	SourceTags []string `protobuf:"bytes,8,rep,name=source_tags,json=sourceTags,proto3" json:"source_tags,omitempty"`
	// Target tags
	TargetTags []string `protobuf:"bytes,9,rep,name=target_tags,json=targetTags,proto3" json:"target_tags,omitempty"`
	// Allowed protocols and ports
	Allow []*FirewallAllow `protobuf:"bytes,10,rep,name=allow,proto3" json:"allow,omitempty"`
	// Denied protocols and ports
	Deny          []*FirewallDeny `protobuf:"bytes,11,rep,name=deny,proto3" json:"deny,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirewallRule) Reset() {
	*x = FirewallRule{}
	mi := &file_proto_custodian_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirewallRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirewallRule) ProtoMessage() {}

func (x *FirewallRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirewallRule.ProtoReflect.Descriptor instead.
func (*FirewallRule) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{7}
}

func (x *FirewallRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FirewallRule) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FirewallRule) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *FirewallRule) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *FirewallRule) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *FirewallRule) GetSourceRanges() []string {
	if x != nil {
		return x.SourceRanges
	}
	return nil
}

func (x *FirewallRule) GetDestinationRanges() []string {
	if x != nil {
		return x.DestinationRanges
	}
	return nil
}

func (x *FirewallRule) GetSourceTags() []string {
	if x != nil {
		return x.SourceTags
	}
	return nil
}

func (x *FirewallRule) GetTargetTags() []string {
	if x != nil {
		return x.TargetTags
	}
	return nil
}

func (x *FirewallRule) GetAllow() []*FirewallAllow {
	if x != nil {
		return x.Allow
	}
	return nil
}

func (x *FirewallRule) GetDeny() []*FirewallDeny {
	if x != nil {
		return x.Deny
	}
	return nil
}

// Firewall allow rule
type FirewallAllow struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Protocol (tcp, udp, icmp, etc.)
	Protocol string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// Ports
	Ports         []string `protobuf:"bytes,2,rep,name=ports,proto3" json:"ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirewallAllow) Reset() {
	*x = FirewallAllow{}
	mi := &file_proto_custodian_config_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirewallAllow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirewallAllow) ProtoMessage() {}

func (x *FirewallAllow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirewallAllow.ProtoReflect.Descriptor instead.
func (*FirewallAllow) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{8}
}

func (x *FirewallAllow) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *FirewallAllow) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

// Firewall deny rule
type FirewallDeny struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Protocol (tcp, udp, icmp, etc.)
	Protocol string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// Ports
	Ports         []string `protobuf:"bytes,2,rep,name=ports,proto3" json:"ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirewallDeny) Reset() {
	*x = FirewallDeny{}
	mi := &file_proto_custodian_config_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirewallDeny) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirewallDeny) ProtoMessage() {}

func (x *FirewallDeny) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirewallDeny.ProtoReflect.Descriptor instead.
func (*FirewallDeny) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{9}
}

func (x *FirewallDeny) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *FirewallDeny) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

// NAT Gateway configuration
type NatGateway struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the NAT gateway
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Region
	Region Region `protobuf:"varint,2,opt,name=region,proto3,enum=custodian.Region" json:"region,omitempty"`
	// Router name
	Router string `protobuf:"bytes,3,opt,name=router,proto3" json:"router,omitempty"`
	// NAT IP allocate option
	NatIpAllocateOption string `protobuf:"bytes,4,opt,name=nat_ip_allocate_option,json=natIpAllocateOption,proto3" json:"nat_ip_allocate_option,omitempty"` // "MANUAL_ONLY" or "AUTO_ONLY"
	// Static IP addresses
	NatIps []string `protobuf:"bytes,5,rep,name=nat_ips,json=natIps,proto3" json:"nat_ips,omitempty"`
	// Source subnetwork IP ranges
	SourceSubnetworkIpRangesToNat []*NatSubnetwork `protobuf:"bytes,6,rep,name=source_subnetwork_ip_ranges_to_nat,json=sourceSubnetworkIpRangesToNat,proto3" json:"source_subnetwork_ip_ranges_to_nat,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *NatGateway) Reset() {
	*x = NatGateway{}
	mi := &file_proto_custodian_config_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatGateway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatGateway) ProtoMessage() {}

func (x *NatGateway) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatGateway.ProtoReflect.Descriptor instead.
func (*NatGateway) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{10}
}

func (x *NatGateway) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NatGateway) GetRegion() Region {
	if x != nil {
		return x.Region
	}
	return Region_REGION_UNSPECIFIED
}

func (x *NatGateway) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *NatGateway) GetNatIpAllocateOption() string {
	if x != nil {
		return x.NatIpAllocateOption
	}
	return ""
}

func (x *NatGateway) GetNatIps() []string {
	if x != nil {
		return x.NatIps
	}
	return nil
}

func (x *NatGateway) GetSourceSubnetworkIpRangesToNat() []*NatSubnetwork {
	if x != nil {
		return x.SourceSubnetworkIpRangesToNat
	}
	return nil
}

// NAT subnetwork configuration
type NatSubnetwork struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the subnetwork
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Source IP ranges to NAT
	SourceIpRangesToNat []string `protobuf:"bytes,2,rep,name=source_ip_ranges_to_nat,json=sourceIpRangesToNat,proto3" json:"source_ip_ranges_to_nat,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *NatSubnetwork) Reset() {
	*x = NatSubnetwork{}
	mi := &file_proto_custodian_config_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatSubnetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatSubnetwork) ProtoMessage() {}

func (x *NatSubnetwork) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatSubnetwork.ProtoReflect.Descriptor instead.
func (*NatSubnetwork) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{11}
}

func (x *NatSubnetwork) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NatSubnetwork) GetSourceIpRangesToNat() []string {
	if x != nil {
		return x.SourceIpRangesToNat
	}
	return nil
}

// Compute configuration
type Compute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Instance templates
	InstanceTemplates []*InstanceTemplate `protobuf:"bytes,1,rep,name=instance_templates,json=instanceTemplates,proto3" json:"instance_templates,omitempty"`
	// Instance groups
	InstanceGroups []*InstanceGroup `protobuf:"bytes,2,rep,name=instance_groups,json=instanceGroups,proto3" json:"instance_groups,omitempty"`
	// Individual instances
	Instances     []*Instance `protobuf:"bytes,3,rep,name=instances,proto3" json:"instances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Compute) Reset() {
	*x = Compute{}
	mi := &file_proto_custodian_config_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Compute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Compute) ProtoMessage() {}

func (x *Compute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Compute.ProtoReflect.Descriptor instead.
func (*Compute) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{12}
}

func (x *Compute) GetInstanceTemplates() []*InstanceTemplate {
	if x != nil {
		return x.InstanceTemplates
	}
	return nil
}

func (x *Compute) GetInstanceGroups() []*InstanceGroup {
	if x != nil {
		return x.InstanceGroups
	}
	return nil
}

func (x *Compute) GetInstances() []*Instance {
	if x != nil {
		return x.Instances
	}
	return nil
}

// Instance template configuration
type InstanceTemplate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the template
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Machine type
	MachineType MachineType `protobuf:"varint,3,opt,name=machine_type,json=machineType,proto3,enum=custodian.MachineType" json:"machine_type,omitempty"`
	// Boot disk image
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	// Boot disk size in GB
	DiskSizeGb int32 `protobuf:"varint,5,opt,name=disk_size_gb,json=diskSizeGb,proto3" json:"disk_size_gb,omitempty"`
	// Disk type
	DiskType DiskType `protobuf:"varint,6,opt,name=disk_type,json=diskType,proto3,enum=custodian.DiskType" json:"disk_type,omitempty"`
	// Network interfaces
	NetworkInterfaces []*NetworkInterface `protobuf:"bytes,7,rep,name=network_interfaces,json=networkInterfaces,proto3" json:"network_interfaces,omitempty"`
	// Service account
	ServiceAccount string `protobuf:"bytes,8,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	// Scopes
	Scopes []string `protobuf:"bytes,9,rep,name=scopes,proto3" json:"scopes,omitempty"`
	// Metadata
	Metadata map[string]string `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Tags
	Tags []string `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	// Labels
	Labels map[string]string `protobuf:"bytes,12,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Startup script
	StartupScript string `protobuf:"bytes,13,opt,name=startup_script,json=startupScript,proto3" json:"startup_script,omitempty"`
	// Preemptible
	Preemptible   bool `protobuf:"varint,14,opt,name=preemptible,proto3" json:"preemptible,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstanceTemplate) Reset() {
	*x = InstanceTemplate{}
	mi := &file_proto_custodian_config_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceTemplate) ProtoMessage() {}

func (x *InstanceTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceTemplate.ProtoReflect.Descriptor instead.
func (*InstanceTemplate) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{13}
}

func (x *InstanceTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstanceTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InstanceTemplate) GetMachineType() MachineType {
	if x != nil {
		return x.MachineType
	}
	return MachineType_MACHINE_UNSPECIFIED
}

func (x *InstanceTemplate) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *InstanceTemplate) GetDiskSizeGb() int32 {
	if x != nil {
		return x.DiskSizeGb
	}
	return 0
}

func (x *InstanceTemplate) GetDiskType() DiskType {
	if x != nil {
		return x.DiskType
	}
	return DiskType_DISK_TYPE_UNSPECIFIED
}

func (x *InstanceTemplate) GetNetworkInterfaces() []*NetworkInterface {
	if x != nil {
		return x.NetworkInterfaces
	}
	return nil
}

func (x *InstanceTemplate) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

func (x *InstanceTemplate) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *InstanceTemplate) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *InstanceTemplate) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *InstanceTemplate) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *InstanceTemplate) GetStartupScript() string {
	if x != nil {
		return x.StartupScript
	}
	return ""
}

func (x *InstanceTemplate) GetPreemptible() bool {
	if x != nil {
		return x.Preemptible
	}
	return false
}

// Network interface configuration
type NetworkInterface struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network
	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	// Subnetwork
	Subnetwork string `protobuf:"bytes,2,opt,name=subnetwork,proto3" json:"subnetwork,omitempty"`
	// Access configs for external IP
	AccessConfigs []*AccessConfig `protobuf:"bytes,3,rep,name=access_configs,json=accessConfigs,proto3" json:"access_configs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInterface) Reset() {
	*x = NetworkInterface{}
	mi := &file_proto_custodian_config_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterface) ProtoMessage() {}

func (x *NetworkInterface) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterface.ProtoReflect.Descriptor instead.
func (*NetworkInterface) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{14}
}

func (x *NetworkInterface) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *NetworkInterface) GetSubnetwork() string {
	if x != nil {
		return x.Subnetwork
	}
	return ""
}

func (x *NetworkInterface) GetAccessConfigs() []*AccessConfig {
	if x != nil {
		return x.AccessConfigs
	}
	return nil
}

// Access configuration for network interface
type AccessConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type (ONE_TO_ONE_NAT)
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// NAT IP (reserved IP name)
	NatIp string `protobuf:"bytes,3,opt,name=nat_ip,json=natIp,proto3" json:"nat_ip,omitempty"`
	// Network tier
	NetworkTier   NetworkTier `protobuf:"varint,4,opt,name=network_tier,json=networkTier,proto3,enum=custodian.NetworkTier" json:"network_tier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessConfig) Reset() {
	*x = AccessConfig{}
	mi := &file_proto_custodian_config_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessConfig) ProtoMessage() {}

func (x *AccessConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessConfig.ProtoReflect.Descriptor instead.
func (*AccessConfig) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{15}
}

func (x *AccessConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccessConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AccessConfig) GetNatIp() string {
	if x != nil {
		return x.NatIp
	}
	return ""
}

func (x *AccessConfig) GetNetworkTier() NetworkTier {
	if x != nil {
		return x.NetworkTier
	}
	return NetworkTier_NETWORK_TIER_UNSPECIFIED
}

// Instance group configuration
type InstanceGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the instance group
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Instance template
	Template string `protobuf:"bytes,3,opt,name=template,proto3" json:"template,omitempty"`
	// Target size
	Size int32 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	// Zones
	Zones []Zone `protobuf:"varint,5,rep,packed,name=zones,proto3,enum=custodian.Zone" json:"zones,omitempty"`
	// Auto scaling configuration
	AutoScaling *AutoScaling `protobuf:"bytes,6,opt,name=auto_scaling,json=autoScaling,proto3" json:"auto_scaling,omitempty"`
	// Named ports
	NamedPorts []*NamedPort `protobuf:"bytes,7,rep,name=named_ports,json=namedPorts,proto3" json:"named_ports,omitempty"`
	// Base instance name
	BaseInstanceName string `protobuf:"bytes,8,opt,name=base_instance_name,json=baseInstanceName,proto3" json:"base_instance_name,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InstanceGroup) Reset() {
	*x = InstanceGroup{}
	mi := &file_proto_custodian_config_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceGroup) ProtoMessage() {}

func (x *InstanceGroup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceGroup.ProtoReflect.Descriptor instead.
func (*InstanceGroup) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{16}
}

func (x *InstanceGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstanceGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InstanceGroup) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *InstanceGroup) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *InstanceGroup) GetZones() []Zone {
	if x != nil {
		return x.Zones
	}
	return nil
}

func (x *InstanceGroup) GetAutoScaling() *AutoScaling {
	if x != nil {
		return x.AutoScaling
	}
	return nil
}

func (x *InstanceGroup) GetNamedPorts() []*NamedPort {
	if x != nil {
		return x.NamedPorts
	}
	return nil
}

func (x *InstanceGroup) GetBaseInstanceName() string {
	if x != nil {
		return x.BaseInstanceName
	}
	return ""
}

// Auto scaling configuration
type AutoScaling struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Minimum replicas
	Min int32 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	// Maximum replicas
	Max int32 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	// CPU target utilization
	CpuTarget float32 `protobuf:"fixed32,3,opt,name=cpu_target,json=cpuTarget,proto3" json:"cpu_target,omitempty"`
	// Cooldown period
	CooldownPeriod int32 `protobuf:"varint,4,opt,name=cooldown_period,json=cooldownPeriod,proto3" json:"cooldown_period,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AutoScaling) Reset() {
	*x = AutoScaling{}
	mi := &file_proto_custodian_config_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoScaling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScaling) ProtoMessage() {}

func (x *AutoScaling) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScaling.ProtoReflect.Descriptor instead.
func (*AutoScaling) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{17}
}

func (x *AutoScaling) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *AutoScaling) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *AutoScaling) GetCpuTarget() float32 {
	if x != nil {
		return x.CpuTarget
	}
	return 0
}

func (x *AutoScaling) GetCooldownPeriod() int32 {
	if x != nil {
		return x.CooldownPeriod
	}
	return 0
}

// Named port for instance groups
type NamedPort struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Port
	Port          int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamedPort) Reset() {
	*x = NamedPort{}
	mi := &file_proto_custodian_config_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamedPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedPort) ProtoMessage() {}

func (x *NamedPort) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedPort.ProtoReflect.Descriptor instead.
func (*NamedPort) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{18}
}

func (x *NamedPort) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NamedPort) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// Individual instance configuration
type Instance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the instance
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Zone
	Zone Zone `protobuf:"varint,2,opt,name=zone,proto3,enum=custodian.Zone" json:"zone,omitempty"`
	// Machine type
	MachineType MachineType `protobuf:"varint,3,opt,name=machine_type,json=machineType,proto3,enum=custodian.MachineType" json:"machine_type,omitempty"`
	// Boot disk image
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	// Network interfaces
	NetworkInterfaces []*NetworkInterface `protobuf:"bytes,5,rep,name=network_interfaces,json=networkInterfaces,proto3" json:"network_interfaces,omitempty"`
	// Service account
	ServiceAccount string `protobuf:"bytes,6,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	// Metadata
	Metadata map[string]string `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Tags
	Tags          []string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Instance) Reset() {
	*x = Instance{}
	mi := &file_proto_custodian_config_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{19}
}

func (x *Instance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instance) GetZone() Zone {
	if x != nil {
		return x.Zone
	}
	return Zone_ZONE_UNSPECIFIED
}

func (x *Instance) GetMachineType() MachineType {
	if x != nil {
		return x.MachineType
	}
	return MachineType_MACHINE_UNSPECIFIED
}

func (x *Instance) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Instance) GetNetworkInterfaces() []*NetworkInterface {
	if x != nil {
		return x.NetworkInterfaces
	}
	return nil
}

func (x *Instance) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

func (x *Instance) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Instance) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Load balancer configuration
type LoadBalancer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the load balancer
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type of load balancer
	Type LoadBalancerType `protobuf:"varint,2,opt,name=type,proto3,enum=custodian.LoadBalancerType" json:"type,omitempty"`
	// IP address (reserved IP name)
	Ip string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	// Backend service or instance group
	Backend string `protobuf:"bytes,4,opt,name=backend,proto3" json:"backend,omitempty"`
	// Port range
	PortRange string `protobuf:"bytes,5,opt,name=port_range,json=portRange,proto3" json:"port_range,omitempty"`
	// Health check
	HealthCheck   *HealthCheck `protobuf:"bytes,6,opt,name=health_check,json=healthCheck,proto3" json:"health_check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadBalancer) Reset() {
	*x = LoadBalancer{}
	mi := &file_proto_custodian_config_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadBalancer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadBalancer) ProtoMessage() {}

func (x *LoadBalancer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadBalancer.ProtoReflect.Descriptor instead.
func (*LoadBalancer) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{20}
}

func (x *LoadBalancer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoadBalancer) GetType() LoadBalancerType {
	if x != nil {
		return x.Type
	}
	return LoadBalancerType_LB_UNSPECIFIED
}

func (x *LoadBalancer) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LoadBalancer) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

func (x *LoadBalancer) GetPortRange() string {
	if x != nil {
		return x.PortRange
	}
	return ""
}

func (x *LoadBalancer) GetHealthCheck() *HealthCheck {
	if x != nil {
		return x.HealthCheck
	}
	return nil
}

// Health check configuration
type HealthCheck struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type (HTTP, HTTPS, TCP, etc.)
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Port
	Port int32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	// Request path (for HTTP/HTTPS)
	RequestPath string `protobuf:"bytes,4,opt,name=request_path,json=requestPath,proto3" json:"request_path,omitempty"`
	// Check interval
	CheckIntervalSec int32 `protobuf:"varint,5,opt,name=check_interval_sec,json=checkIntervalSec,proto3" json:"check_interval_sec,omitempty"`
	// Timeout
	TimeoutSec int32 `protobuf:"varint,6,opt,name=timeout_sec,json=timeoutSec,proto3" json:"timeout_sec,omitempty"`
	// Healthy threshold
	HealthyThreshold int32 `protobuf:"varint,7,opt,name=healthy_threshold,json=healthyThreshold,proto3" json:"healthy_threshold,omitempty"`
	// Unhealthy threshold
	UnhealthyThreshold int32 `protobuf:"varint,8,opt,name=unhealthy_threshold,json=unhealthyThreshold,proto3" json:"unhealthy_threshold,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	mi := &file_proto_custodian_config_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{21}
}

func (x *HealthCheck) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HealthCheck) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *HealthCheck) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *HealthCheck) GetRequestPath() string {
	if x != nil {
		return x.RequestPath
	}
	return ""
}

func (x *HealthCheck) GetCheckIntervalSec() int32 {
	if x != nil {
		return x.CheckIntervalSec
	}
	return 0
}

func (x *HealthCheck) GetTimeoutSec() int32 {
	if x != nil {
		return x.TimeoutSec
	}
	return 0
}

func (x *HealthCheck) GetHealthyThreshold() int32 {
	if x != nil {
		return x.HealthyThreshold
	}
	return 0
}

func (x *HealthCheck) GetUnhealthyThreshold() int32 {
	if x != nil {
		return x.UnhealthyThreshold
	}
	return 0
}

// IAM configuration
type Iam struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Role bindings
	RoleBindings []*RoleBinding `protobuf:"bytes,1,rep,name=role_bindings,json=roleBindings,proto3" json:"role_bindings,omitempty"`
	// Service accounts
	ServiceAccounts []*ServiceAccount `protobuf:"bytes,2,rep,name=service_accounts,json=serviceAccounts,proto3" json:"service_accounts,omitempty"`
	// Custom roles
	CustomRoles   []*CustomRole `protobuf:"bytes,3,rep,name=custom_roles,json=customRoles,proto3" json:"custom_roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Iam) Reset() {
	*x = Iam{}
	mi := &file_proto_custodian_config_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Iam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Iam) ProtoMessage() {}

func (x *Iam) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Iam.ProtoReflect.Descriptor instead.
func (*Iam) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{22}
}

func (x *Iam) GetRoleBindings() []*RoleBinding {
	if x != nil {
		return x.RoleBindings
	}
	return nil
}

func (x *Iam) GetServiceAccounts() []*ServiceAccount {
	if x != nil {
		return x.ServiceAccounts
	}
	return nil
}

func (x *Iam) GetCustomRoles() []*CustomRole {
	if x != nil {
		return x.CustomRoles
	}
	return nil
}

// IAM role binding
type RoleBinding struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Role name
	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	// Members
	Members []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	// Condition (optional)
	Condition     *Condition `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoleBinding) Reset() {
	*x = RoleBinding{}
	mi := &file_proto_custodian_config_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleBinding) ProtoMessage() {}

func (x *RoleBinding) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleBinding.ProtoReflect.Descriptor instead.
func (*RoleBinding) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{23}
}

func (x *RoleBinding) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *RoleBinding) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *RoleBinding) GetCondition() *Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

// IAM condition
type Condition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Title
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Expression
	Expression    string `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Condition) Reset() {
	*x = Condition{}
	mi := &file_proto_custodian_config_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{24}
}

func (x *Condition) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Condition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Condition) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

// Service account configuration
type ServiceAccount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account ID
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Display name
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Roles to assign
	Roles []string `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	// Generate key
	GenerateKey   bool `protobuf:"varint,5,opt,name=generate_key,json=generateKey,proto3" json:"generate_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceAccount) Reset() {
	*x = ServiceAccount{}
	mi := &file_proto_custodian_config_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAccount) ProtoMessage() {}

func (x *ServiceAccount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAccount.ProtoReflect.Descriptor instead.
func (*ServiceAccount) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{25}
}

func (x *ServiceAccount) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ServiceAccount) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ServiceAccount) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceAccount) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ServiceAccount) GetGenerateKey() bool {
	if x != nil {
		return x.GenerateKey
	}
	return false
}

// Custom IAM role
type CustomRole struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Role ID
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// Title
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Permissions
	Permissions []string `protobuf:"bytes,4,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// Stage (ALPHA, BETA, GA, DEPRECATED)
	Stage         string `protobuf:"bytes,5,opt,name=stage,proto3" json:"stage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomRole) Reset() {
	*x = CustomRole{}
	mi := &file_proto_custodian_config_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomRole) ProtoMessage() {}

func (x *CustomRole) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomRole.ProtoReflect.Descriptor instead.
func (*CustomRole) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{26}
}

func (x *CustomRole) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *CustomRole) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CustomRole) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CustomRole) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *CustomRole) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

// Storage configuration
type Storage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cloud Storage buckets
	Buckets       []*StorageBucket `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Storage) Reset() {
	*x = Storage{}
	mi := &file_proto_custodian_config_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage) ProtoMessage() {}

func (x *Storage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage.ProtoReflect.Descriptor instead.
func (*Storage) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{27}
}

func (x *Storage) GetBuckets() []*StorageBucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

// Cloud Storage bucket configuration
type StorageBucket struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Bucket name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Location
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	// Storage class
	StorageClass string `protobuf:"bytes,3,opt,name=storage_class,json=storageClass,proto3" json:"storage_class,omitempty"` // STANDARD, NEARLINE, COLDLINE, ARCHIVE
	// Uniform bucket-level access
	UniformBucketLevelAccess bool `protobuf:"varint,4,opt,name=uniform_bucket_level_access,json=uniformBucketLevelAccess,proto3" json:"uniform_bucket_level_access,omitempty"`
	// Versioning enabled
	Versioning bool `protobuf:"varint,5,opt,name=versioning,proto3" json:"versioning,omitempty"`
	// Labels
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Lifecycle rules
	LifecycleRules []*LifecycleRule `protobuf:"bytes,7,rep,name=lifecycle_rules,json=lifecycleRules,proto3" json:"lifecycle_rules,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StorageBucket) Reset() {
	*x = StorageBucket{}
	mi := &file_proto_custodian_config_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageBucket) ProtoMessage() {}

func (x *StorageBucket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageBucket.ProtoReflect.Descriptor instead.
func (*StorageBucket) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{28}
}

func (x *StorageBucket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StorageBucket) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *StorageBucket) GetStorageClass() string {
	if x != nil {
		return x.StorageClass
	}
	return ""
}

func (x *StorageBucket) GetUniformBucketLevelAccess() bool {
	if x != nil {
		return x.UniformBucketLevelAccess
	}
	return false
}

func (x *StorageBucket) GetVersioning() bool {
	if x != nil {
		return x.Versioning
	}
	return false
}

func (x *StorageBucket) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *StorageBucket) GetLifecycleRules() []*LifecycleRule {
	if x != nil {
		return x.LifecycleRules
	}
	return nil
}

// Storage bucket lifecycle rule
type LifecycleRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Action
	Action *LifecycleAction `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	// Condition
	Condition     *LifecycleCondition `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LifecycleRule) Reset() {
	*x = LifecycleRule{}
	mi := &file_proto_custodian_config_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LifecycleRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LifecycleRule) ProtoMessage() {}

func (x *LifecycleRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LifecycleRule.ProtoReflect.Descriptor instead.
func (*LifecycleRule) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{29}
}

func (x *LifecycleRule) GetAction() *LifecycleAction {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *LifecycleRule) GetCondition() *LifecycleCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

// Lifecycle action
type LifecycleAction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type (Delete, SetStorageClass)
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Storage class (for SetStorageClass action)
	StorageClass  string `protobuf:"bytes,2,opt,name=storage_class,json=storageClass,proto3" json:"storage_class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LifecycleAction) Reset() {
	*x = LifecycleAction{}
	mi := &file_proto_custodian_config_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LifecycleAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LifecycleAction) ProtoMessage() {}

func (x *LifecycleAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LifecycleAction.ProtoReflect.Descriptor instead.
func (*LifecycleAction) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{30}
}

func (x *LifecycleAction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LifecycleAction) GetStorageClass() string {
	if x != nil {
		return x.StorageClass
	}
	return ""
}

// Lifecycle condition
type LifecycleCondition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Age in days
	Age int32 `protobuf:"varint,1,opt,name=age,proto3" json:"age,omitempty"`
	// Creation date before
	CreatedBefore string `protobuf:"bytes,2,opt,name=created_before,json=createdBefore,proto3" json:"created_before,omitempty"`
	// Matches storage class
	MatchesStorageClass []string `protobuf:"bytes,3,rep,name=matches_storage_class,json=matchesStorageClass,proto3" json:"matches_storage_class,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *LifecycleCondition) Reset() {
	*x = LifecycleCondition{}
	mi := &file_proto_custodian_config_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LifecycleCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LifecycleCondition) ProtoMessage() {}

func (x *LifecycleCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_custodian_config_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LifecycleCondition.ProtoReflect.Descriptor instead.
func (*LifecycleCondition) Descriptor() ([]byte, []int) {
	return file_proto_custodian_config_proto_rawDescGZIP(), []int{31}
}

func (x *LifecycleCondition) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *LifecycleCondition) GetCreatedBefore() string {
	if x != nil {
		return x.CreatedBefore
	}
	return ""
}

func (x *LifecycleCondition) GetMatchesStorageClass() []string {
	if x != nil {
		return x.MatchesStorageClass
	}
	return nil
}

var File_proto_custodian_config_proto protoreflect.FileDescriptor

const file_proto_custodian_config_proto_rawDesc = "" +
	"\n" +
	"\x1cproto/custodian/config.proto\x12\tcustodian\x1a\x1bproto/custodian/enums.proto\"\xab\x02\n" +
	"\x06Config\x12,\n" +
	"\aproject\x18\x01 \x01(\v2\x12.custodian.ProjectR\aproject\x125\n" +
	"\n" +
	"networking\x18\x02 \x01(\v2\x15.custodian.NetworkingR\n" +
	"networking\x12,\n" +
	"\acompute\x18\x03 \x01(\v2\x12.custodian.ComputeR\acompute\x12>\n" +
	"\x0eload_balancers\x18\x04 \x03(\v2\x17.custodian.LoadBalancerR\rloadBalancers\x12 \n" +
	"\x03iam\x18\x05 \x01(\v2\x0e.custodian.IamR\x03iam\x12,\n" +
	"\astorage\x18\x06 \x01(\v2\x12.custodian.StorageR\astorage\"\xb6\x02\n" +
	"\aProject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12'\n" +
	"\x0fbilling_account\x18\x03 \x01(\tR\x0ebillingAccount\x12'\n" +
	"\x0forganization_id\x18\x04 \x01(\tR\x0eorganizationId\x12\x1b\n" +
	"\tfolder_id\x18\x05 \x01(\tR\bfolderId\x12%\n" +
	"\x04apis\x18\x06 \x03(\x0e2\x11.custodian.GcpApiR\x04apis\x126\n" +
	"\x06labels\x18\a \x03(\v2\x1e.custodian.Project.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe4\x01\n" +
	"\n" +
	"Networking\x128\n" +
	"\freserved_ips\x18\x01 \x03(\v2\x15.custodian.ReservedIpR\vreservedIps\x12\"\n" +
	"\x04vpcs\x18\x02 \x03(\v2\x0e.custodian.VpcR\x04vpcs\x12>\n" +
	"\x0efirewall_rules\x18\x03 \x03(\v2\x17.custodian.FirewallRuleR\rfirewallRules\x128\n" +
	"\fnat_gateways\x18\x04 \x03(\v2\x15.custodian.NatGatewayR\vnatGateways\"\xd7\x01\n" +
	"\n" +
	"ReservedIp\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12-\n" +
	"\x04type\x18\x02 \x01(\x0e2\x19.custodian.ReservedIpTypeR\x04type\x12)\n" +
	"\x06region\x18\x03 \x01(\x0e2\x11.custodian.RegionR\x06region\x129\n" +
	"\fnetwork_tier\x18\x04 \x01(\x0e2\x16.custodian.NetworkTierR\vnetworkTier\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\"\xc3\x01\n" +
	"\x03Vpc\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12+\n" +
	"\asubnets\x18\x03 \x03(\v2\x11.custodian.SubnetR\asubnets\x126\n" +
	"\x17auto_create_subnetworks\x18\x04 \x01(\bR\x15autoCreateSubnetworks\x12!\n" +
	"\frouting_mode\x18\x05 \x01(\tR\vroutingMode\"\xfc\x01\n" +
	"\x06Subnet\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04cidr\x18\x02 \x01(\tR\x04cidr\x12)\n" +
	"\x06region\x18\x03 \x01(\x0e2\x11.custodian.RegionR\x06region\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x127\n" +
	"\x18private_ip_google_access\x18\x05 \x01(\bR\x15privateIpGoogleAccess\x12D\n" +
	"\x10secondary_ranges\x18\x06 \x03(\v2\x19.custodian.SecondaryRangeR\x0fsecondaryRanges\"S\n" +
	"\x0eSecondaryRange\x12\x1d\n" +
	"\n" +
	"range_name\x18\x01 \x01(\tR\trangeName\x12\"\n" +
	"\rip_cidr_range\x18\x02 \x01(\tR\vipCidrRange\"\x8b\x03\n" +
	"\fFirewallRule\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1c\n" +
	"\tdirection\x18\x03 \x01(\tR\tdirection\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\x05R\bpriority\x12\x18\n" +
	"\anetwork\x18\x05 \x01(\tR\anetwork\x12#\n" +
	"\rsource_ranges\x18\x06 \x03(\tR\fsourceRanges\x12-\n" +
	"\x12destination_ranges\x18\a \x03(\tR\x11destinationRanges\x12\x1f\n" +
	"\vsource_tags\x18\b \x03(\tR\n" +
	"sourceTags\x12\x1f\n" +
	"\vtarget_tags\x18\t \x03(\tR\n" +
	"targetTags\x12.\n" +
	"\x05allow\x18\n" +
	" \x03(\v2\x18.custodian.FirewallAllowR\x05allow\x12+\n" +
	"\x04deny\x18\v \x03(\v2\x17.custodian.FirewallDenyR\x04deny\"A\n" +
	"\rFirewallAllow\x12\x1a\n" +
	"\bprotocol\x18\x01 \x01(\tR\bprotocol\x12\x14\n" +
	"\x05ports\x18\x02 \x03(\tR\x05ports\"@\n" +
	"\fFirewallDeny\x12\x1a\n" +
	"\bprotocol\x18\x01 \x01(\tR\bprotocol\x12\x14\n" +
	"\x05ports\x18\x02 \x03(\tR\x05ports\"\x96\x02\n" +
	"\n" +
	"NatGateway\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12)\n" +
	"\x06region\x18\x02 \x01(\x0e2\x11.custodian.RegionR\x06region\x12\x16\n" +
	"\x06router\x18\x03 \x01(\tR\x06router\x123\n" +
	"\x16nat_ip_allocate_option\x18\x04 \x01(\tR\x13natIpAllocateOption\x12\x17\n" +
	"\anat_ips\x18\x05 \x03(\tR\x06natIps\x12c\n" +
	"\"source_subnetwork_ip_ranges_to_nat\x18\x06 \x03(\v2\x18.custodian.NatSubnetworkR\x1dsourceSubnetworkIpRangesToNat\"Y\n" +
	"\rNatSubnetwork\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x124\n" +
	"\x17source_ip_ranges_to_nat\x18\x02 \x03(\tR\x13sourceIpRangesToNat\"\xcb\x01\n" +
	"\aCompute\x12J\n" +
	"\x12instance_templates\x18\x01 \x03(\v2\x1b.custodian.InstanceTemplateR\x11instanceTemplates\x12A\n" +
	"\x0finstance_groups\x18\x02 \x03(\v2\x18.custodian.InstanceGroupR\x0einstanceGroups\x121\n" +
	"\tinstances\x18\x03 \x03(\v2\x13.custodian.InstanceR\tinstances\"\xd7\x05\n" +
	"\x10InstanceTemplate\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x129\n" +
	"\fmachine_type\x18\x03 \x01(\x0e2\x16.custodian.MachineTypeR\vmachineType\x12\x14\n" +
	"\x05image\x18\x04 \x01(\tR\x05image\x12 \n" +
	"\fdisk_size_gb\x18\x05 \x01(\x05R\n" +
	"diskSizeGb\x120\n" +
	"\tdisk_type\x18\x06 \x01(\x0e2\x13.custodian.DiskTypeR\bdiskType\x12J\n" +
	"\x12network_interfaces\x18\a \x03(\v2\x1b.custodian.NetworkInterfaceR\x11networkInterfaces\x12'\n" +
	"\x0fservice_account\x18\b \x01(\tR\x0eserviceAccount\x12\x16\n" +
	"\x06scopes\x18\t \x03(\tR\x06scopes\x12E\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2).custodian.InstanceTemplate.MetadataEntryR\bmetadata\x12\x12\n" +
	"\x04tags\x18\v \x03(\tR\x04tags\x12?\n" +
	"\x06labels\x18\f \x03(\v2'.custodian.InstanceTemplate.LabelsEntryR\x06labels\x12%\n" +
	"\x0estartup_script\x18\r \x01(\tR\rstartupScript\x12 \n" +
	"\vpreemptible\x18\x0e \x01(\bR\vpreemptible\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8c\x01\n" +
	"\x10NetworkInterface\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x1e\n" +
	"\n" +
	"subnetwork\x18\x02 \x01(\tR\n" +
	"subnetwork\x12>\n" +
	"\x0eaccess_configs\x18\x03 \x03(\v2\x17.custodian.AccessConfigR\raccessConfigs\"\x88\x01\n" +
	"\fAccessConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x15\n" +
	"\x06nat_ip\x18\x03 \x01(\tR\x05natIp\x129\n" +
	"\fnetwork_tier\x18\x04 \x01(\x0e2\x16.custodian.NetworkTierR\vnetworkTier\"\xbc\x02\n" +
	"\rInstanceGroup\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1a\n" +
	"\btemplate\x18\x03 \x01(\tR\btemplate\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x05R\x04size\x12%\n" +
	"\x05zones\x18\x05 \x03(\x0e2\x0f.custodian.ZoneR\x05zones\x129\n" +
	"\fauto_scaling\x18\x06 \x01(\v2\x16.custodian.AutoScalingR\vautoScaling\x125\n" +
	"\vnamed_ports\x18\a \x03(\v2\x14.custodian.NamedPortR\n" +
	"namedPorts\x12,\n" +
	"\x12base_instance_name\x18\b \x01(\tR\x10baseInstanceName\"y\n" +
	"\vAutoScaling\x12\x10\n" +
	"\x03min\x18\x01 \x01(\x05R\x03min\x12\x10\n" +
	"\x03max\x18\x02 \x01(\x05R\x03max\x12\x1d\n" +
	"\n" +
	"cpu_target\x18\x03 \x01(\x02R\tcpuTarget\x12'\n" +
	"\x0fcooldown_period\x18\x04 \x01(\x05R\x0ecooldownPeriod\"3\n" +
	"\tNamedPort\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\"\x99\x03\n" +
	"\bInstance\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\x04zone\x18\x02 \x01(\x0e2\x0f.custodian.ZoneR\x04zone\x129\n" +
	"\fmachine_type\x18\x03 \x01(\x0e2\x16.custodian.MachineTypeR\vmachineType\x12\x14\n" +
	"\x05image\x18\x04 \x01(\tR\x05image\x12J\n" +
	"\x12network_interfaces\x18\x05 \x03(\v2\x1b.custodian.NetworkInterfaceR\x11networkInterfaces\x12'\n" +
	"\x0fservice_account\x18\x06 \x01(\tR\x0eserviceAccount\x12=\n" +
	"\bmetadata\x18\a \x03(\v2!.custodian.Instance.MetadataEntryR\bmetadata\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd7\x01\n" +
	"\fLoadBalancer\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12/\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1b.custodian.LoadBalancerTypeR\x04type\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x18\n" +
	"\abackend\x18\x04 \x01(\tR\abackend\x12\x1d\n" +
	"\n" +
	"port_range\x18\x05 \x01(\tR\tportRange\x129\n" +
	"\fhealth_check\x18\x06 \x01(\v2\x16.custodian.HealthCheckR\vhealthCheck\"\x99\x02\n" +
	"\vHealthCheck\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\x12!\n" +
	"\frequest_path\x18\x04 \x01(\tR\vrequestPath\x12,\n" +
	"\x12check_interval_sec\x18\x05 \x01(\x05R\x10checkIntervalSec\x12\x1f\n" +
	"\vtimeout_sec\x18\x06 \x01(\x05R\n" +
	"timeoutSec\x12+\n" +
	"\x11healthy_threshold\x18\a \x01(\x05R\x10healthyThreshold\x12/\n" +
	"\x13unhealthy_threshold\x18\b \x01(\x05R\x12unhealthyThreshold\"\xc2\x01\n" +
	"\x03Iam\x12;\n" +
	"\rrole_bindings\x18\x01 \x03(\v2\x16.custodian.RoleBindingR\froleBindings\x12D\n" +
	"\x10service_accounts\x18\x02 \x03(\v2\x19.custodian.ServiceAccountR\x0fserviceAccounts\x128\n" +
	"\fcustom_roles\x18\x03 \x03(\v2\x15.custodian.CustomRoleR\vcustomRoles\"o\n" +
	"\vRoleBinding\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\x12\x18\n" +
	"\amembers\x18\x02 \x03(\tR\amembers\x122\n" +
	"\tcondition\x18\x03 \x01(\v2\x14.custodian.ConditionR\tcondition\"c\n" +
	"\tCondition\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"expression\x18\x03 \x01(\tR\n" +
	"expression\"\xad\x01\n" +
	"\x0eServiceAccount\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05roles\x18\x04 \x03(\tR\x05roles\x12!\n" +
	"\fgenerate_key\x18\x05 \x01(\bR\vgenerateKey\"\x95\x01\n" +
	"\n" +
	"CustomRole\x12\x17\n" +
	"\arole_id\x18\x01 \x01(\tR\x06roleId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12 \n" +
	"\vpermissions\x18\x04 \x03(\tR\vpermissions\x12\x14\n" +
	"\x05stage\x18\x05 \x01(\tR\x05stage\"=\n" +
	"\aStorage\x122\n" +
	"\abuckets\x18\x01 \x03(\v2\x18.custodian.StorageBucketR\abuckets\"\xff\x02\n" +
	"\rStorageBucket\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\blocation\x18\x02 \x01(\tR\blocation\x12#\n" +
	"\rstorage_class\x18\x03 \x01(\tR\fstorageClass\x12=\n" +
	"\x1buniform_bucket_level_access\x18\x04 \x01(\bR\x18uniformBucketLevelAccess\x12\x1e\n" +
	"\n" +
	"versioning\x18\x05 \x01(\bR\n" +
	"versioning\x12<\n" +
	"\x06labels\x18\x06 \x03(\v2$.custodian.StorageBucket.LabelsEntryR\x06labels\x12A\n" +
	"\x0flifecycle_rules\x18\a \x03(\v2\x18.custodian.LifecycleRuleR\x0elifecycleRules\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x80\x01\n" +
	"\rLifecycleRule\x122\n" +
	"\x06action\x18\x01 \x01(\v2\x1a.custodian.LifecycleActionR\x06action\x12;\n" +
	"\tcondition\x18\x02 \x01(\v2\x1d.custodian.LifecycleConditionR\tcondition\"J\n" +
	"\x0fLifecycleAction\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12#\n" +
	"\rstorage_class\x18\x02 \x01(\tR\fstorageClass\"\x81\x01\n" +
	"\x12LifecycleCondition\x12\x10\n" +
	"\x03age\x18\x01 \x01(\x05R\x03age\x12%\n" +
	"\x0ecreated_before\x18\x02 \x01(\tR\rcreatedBefore\x122\n" +
	"\x15matches_storage_class\x18\x03 \x03(\tR\x13matchesStorageClassB\x16Z\x14custodian/pkg/configb\x06proto3"

var (
	file_proto_custodian_config_proto_rawDescOnce sync.Once
	file_proto_custodian_config_proto_rawDescData []byte
)

func file_proto_custodian_config_proto_rawDescGZIP() []byte {
	file_proto_custodian_config_proto_rawDescOnce.Do(func() {
		file_proto_custodian_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_custodian_config_proto_rawDesc), len(file_proto_custodian_config_proto_rawDesc)))
	})
	return file_proto_custodian_config_proto_rawDescData
}

var file_proto_custodian_config_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_proto_custodian_config_proto_goTypes = []any{
	(*Config)(nil),             // 0: custodian.Config
	(*Project)(nil),            // 1: custodian.Project
	(*Networking)(nil),         // 2: custodian.Networking
	(*ReservedIp)(nil),         // 3: custodian.ReservedIp
	(*Vpc)(nil),                // 4: custodian.Vpc
	(*Subnet)(nil),             // 5: custodian.Subnet
	(*SecondaryRange)(nil),     // 6: custodian.SecondaryRange
	(*FirewallRule)(nil),       // 7: custodian.FirewallRule
	(*FirewallAllow)(nil),      // 8: custodian.FirewallAllow
	(*FirewallDeny)(nil),       // 9: custodian.FirewallDeny
	(*NatGateway)(nil),         // 10: custodian.NatGateway
	(*NatSubnetwork)(nil),      // 11: custodian.NatSubnetwork
	(*Compute)(nil),            // 12: custodian.Compute
	(*InstanceTemplate)(nil),   // 13: custodian.InstanceTemplate
	(*NetworkInterface)(nil),   // 14: custodian.NetworkInterface
	(*AccessConfig)(nil),       // 15: custodian.AccessConfig
	(*InstanceGroup)(nil),      // 16: custodian.InstanceGroup
	(*AutoScaling)(nil),        // 17: custodian.AutoScaling
	(*NamedPort)(nil),          // 18: custodian.NamedPort
	(*Instance)(nil),           // 19: custodian.Instance
	(*LoadBalancer)(nil),       // 20: custodian.LoadBalancer
	(*HealthCheck)(nil),        // 21: custodian.HealthCheck
	(*Iam)(nil),                // 22: custodian.Iam
	(*RoleBinding)(nil),        // 23: custodian.RoleBinding
	(*Condition)(nil),          // 24: custodian.Condition
	(*ServiceAccount)(nil),     // 25: custodian.ServiceAccount
	(*CustomRole)(nil),         // 26: custodian.CustomRole
	(*Storage)(nil),            // 27: custodian.Storage
	(*StorageBucket)(nil),      // 28: custodian.StorageBucket
	(*LifecycleRule)(nil),      // 29: custodian.LifecycleRule
	(*LifecycleAction)(nil),    // 30: custodian.LifecycleAction
	(*LifecycleCondition)(nil), // 31: custodian.LifecycleCondition
	nil,                        // 32: custodian.Project.LabelsEntry
	nil,                        // 33: custodian.InstanceTemplate.MetadataEntry
	nil,                        // 34: custodian.InstanceTemplate.LabelsEntry
	nil,                        // 35: custodian.Instance.MetadataEntry
	nil,                        // 36: custodian.StorageBucket.LabelsEntry
	(GcpApi)(0),                // 37: custodian.GcpApi
	(ReservedIpType)(0),        // 38: custodian.ReservedIpType
	(Region)(0),                // 39: custodian.Region
	(NetworkTier)(0),           // 40: custodian.NetworkTier
	(MachineType)(0),           // 41: custodian.MachineType
	(DiskType)(0),              // 42: custodian.DiskType
	(Zone)(0),                  // 43: custodian.Zone
	(LoadBalancerType)(0),      // 44: custodian.LoadBalancerType
}
var file_proto_custodian_config_proto_depIdxs = []int32{
	1,  // 0: custodian.Config.project:type_name -> custodian.Project
	2,  // 1: custodian.Config.networking:type_name -> custodian.Networking
	12, // 2: custodian.Config.compute:type_name -> custodian.Compute
	20, // 3: custodian.Config.load_balancers:type_name -> custodian.LoadBalancer
	22, // 4: custodian.Config.iam:type_name -> custodian.Iam
	27, // 5: custodian.Config.storage:type_name -> custodian.Storage
	37, // 6: custodian.Project.apis:type_name -> custodian.GcpApi
	32, // 7: custodian.Project.labels:type_name -> custodian.Project.LabelsEntry
	3,  // 8: custodian.Networking.reserved_ips:type_name -> custodian.ReservedIp
	4,  // 9: custodian.Networking.vpcs:type_name -> custodian.Vpc
	7,  // 10: custodian.Networking.firewall_rules:type_name -> custodian.FirewallRule
	10, // 11: custodian.Networking.nat_gateways:type_name -> custodian.NatGateway
	38, // 12: custodian.ReservedIp.type:type_name -> custodian.ReservedIpType
	39, // 13: custodian.ReservedIp.region:type_name -> custodian.Region
	40, // 14: custodian.ReservedIp.network_tier:type_name -> custodian.NetworkTier
	5,  // 15: custodian.Vpc.subnets:type_name -> custodian.Subnet
	39, // 16: custodian.Subnet.region:type_name -> custodian.Region
	6,  // 17: custodian.Subnet.secondary_ranges:type_name -> custodian.SecondaryRange
	8,  // 18: custodian.FirewallRule.allow:type_name -> custodian.FirewallAllow
	9,  // 19: custodian.FirewallRule.deny:type_name -> custodian.FirewallDeny
	39, // 20: custodian.NatGateway.region:type_name -> custodian.Region
	11, // 21: custodian.NatGateway.source_subnetwork_ip_ranges_to_nat:type_name -> custodian.NatSubnetwork
	13, // 22: custodian.Compute.instance_templates:type_name -> custodian.InstanceTemplate
	16, // 23: custodian.Compute.instance_groups:type_name -> custodian.InstanceGroup
	19, // 24: custodian.Compute.instances:type_name -> custodian.Instance
	41, // 25: custodian.InstanceTemplate.machine_type:type_name -> custodian.MachineType
	42, // 26: custodian.InstanceTemplate.disk_type:type_name -> custodian.DiskType
	14, // 27: custodian.InstanceTemplate.network_interfaces:type_name -> custodian.NetworkInterface
	33, // 28: custodian.InstanceTemplate.metadata:type_name -> custodian.InstanceTemplate.MetadataEntry
	34, // 29: custodian.InstanceTemplate.labels:type_name -> custodian.InstanceTemplate.LabelsEntry
	15, // 30: custodian.NetworkInterface.access_configs:type_name -> custodian.AccessConfig
	40, // 31: custodian.AccessConfig.network_tier:type_name -> custodian.NetworkTier
	43, // 32: custodian.InstanceGroup.zones:type_name -> custodian.Zone
	17, // 33: custodian.InstanceGroup.auto_scaling:type_name -> custodian.AutoScaling
	18, // 34: custodian.InstanceGroup.named_ports:type_name -> custodian.NamedPort
	43, // 35: custodian.Instance.zone:type_name -> custodian.Zone
	41, // 36: custodian.Instance.machine_type:type_name -> custodian.MachineType
	14, // 37: custodian.Instance.network_interfaces:type_name -> custodian.NetworkInterface
	35, // 38: custodian.Instance.metadata:type_name -> custodian.Instance.MetadataEntry
	44, // 39: custodian.LoadBalancer.type:type_name -> custodian.LoadBalancerType
	21, // 40: custodian.LoadBalancer.health_check:type_name -> custodian.HealthCheck
	23, // 41: custodian.Iam.role_bindings:type_name -> custodian.RoleBinding
	25, // 42: custodian.Iam.service_accounts:type_name -> custodian.ServiceAccount
	26, // 43: custodian.Iam.custom_roles:type_name -> custodian.CustomRole
	24, // 44: custodian.RoleBinding.condition:type_name -> custodian.Condition
	28, // 45: custodian.Storage.buckets:type_name -> custodian.StorageBucket
	36, // 46: custodian.StorageBucket.labels:type_name -> custodian.StorageBucket.LabelsEntry
	29, // 47: custodian.StorageBucket.lifecycle_rules:type_name -> custodian.LifecycleRule
	30, // 48: custodian.LifecycleRule.action:type_name -> custodian.LifecycleAction
	31, // 49: custodian.LifecycleRule.condition:type_name -> custodian.LifecycleCondition
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_proto_custodian_config_proto_init() }
func file_proto_custodian_config_proto_init() {
	if File_proto_custodian_config_proto != nil {
		return
	}
	file_proto_custodian_enums_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_custodian_config_proto_rawDesc), len(file_proto_custodian_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_custodian_config_proto_goTypes,
		DependencyIndexes: file_proto_custodian_config_proto_depIdxs,
		MessageInfos:      file_proto_custodian_config_proto_msgTypes,
	}.Build()
	File_proto_custodian_config_proto = out.File
	file_proto_custodian_config_proto_goTypes = nil
	file_proto_custodian_config_proto_depIdxs = nil
}
